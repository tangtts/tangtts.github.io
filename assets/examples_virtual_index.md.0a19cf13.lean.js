import{d as g,o as m,a as d,t as k,_ as S,r as F,c as E,m as V,M as w,y as M,l as N,b as s,F as L,f as P,u as R,n as H,D as U,i as D,v as b,s as $,j as a,k as B}from"./app.3985b09d.js";const j={class:"item"},O=g({__name:"userItem",props:{item:{type:Object,default:()=>[]}},setup(f){return(n,o)=>(m(),d("div",j," item: "+k(f.item.value),1))}});const J=S(O,[["__scopeId","data-v-e9eceb56"]]),G=["index","vid"],K=g({__name:"VirtualList",props:{items:{type:Array,default:()=>[]},size:{type:Number,default:40},remain:{type:Number,default:0},variable:{type:Boolean,default:!1}},setup(f){const n=f,o=F(0),e=F(n.remain),c=F(0),_=E(()=>{let p=o.value-C.value,t=e.value+q.value;return n.items.slice(p,t)}),C=E(()=>Math.min(o.value,n.remain)),q=E(()=>Math.min(e.value,n.items.length-e.value)),x=F(null),h=F(null);let l=V([]);w(()=>{M(()=>{let p=x.value;p&&(p==null||p.forEach(t=>{let{height:y}=t.getBoundingClientRect(),r=+(t.getAttribute("vid")??0)-0,A=l[r].height-y;if(A){l[r].height=y,l[r].bottom=l[r].bottom-A;for(let u=r+1;u<l.length;u++)l[u].top=l[u-1].bottom,l[u].bottom=l[u].bottom-A}})),h.value.style.height=l[l.length-1].bottom+"px"})});const z=p=>{let t=0,y=l.length-1,r=null;for(;t<y;){let i=parseInt(String((t+y)/2)),A=l[i].bottom;if(A==p)return i;A<p?t=i+1:((r==null||r>i)&&(r=i),y=i-1)}return r},v=F(null),I=()=>{let p=v.value.scrollTop;n.variable?(o.value=z(p)||0,e.value=o.value+n.remain,c.value=l[o.value-C.value]?l[o.value-C.value].top:0):(o.value=Math.floor(p/n.size),e.value=o.value+n.remain,c.value=o.value*n.size-C.value*n.size)},T=()=>{l=n.items.map((p,t)=>({height:n.size,top:t*n.size,bottom:(t+1)*n.size}))};return N(()=>{v.value.style.height=n.remain*n.size+"px",h.value.style.height=n.items.length*n.size+"px",T()}),(p,t)=>(m(),d("div",{class:"viewport",ref_key:"viewport",ref:v,onScroll:I},[s("div",{class:"scroll-bar",ref_key:"scrollBar",ref:h},null,512),s("div",{class:"scroll-list",style:H({top:c.value+"px"})},[(m(!0),d(L,null,P(R(_),(y,r)=>(m(),d("div",{index:y.id,vid:y.id,ref_for:!0,ref_key:"itemsRefNode",ref:x},[U(p.$slots,"default",{item:y})],8,G))),256))],4)],544))}});const Q=g({__name:"index",setup(f){const n=[];for(let c=0;c<100;c++)n.push({id:c,value:Math.floor(Math.random()*c)+c});const o=F(8),e=F(40);return(c,_)=>(m(),d("div",null,[D(K,{items:n,remain:o.value,size:e.value,variable:!0},{default:b(({item:C})=>[D(J,{item:C},null,8,["item"])]),_:1},8,["remain","size"])]))}}),W=B("",4),X=s("li",null,[a("用户传递"),s("code",null,"全部数据Data"),a(",和"),s("code",null,"remain 可见个数"),a(",和 "),s("code",null,"size 大约每个item的高度")],-1),Y=s("li",null,[a("定义"),s("code",null,"start"),a(","),s("code",null,"end"),a(" 进行初始化切割，默认"),s("code",null,"start = 0,end = remain")],-1),Z=s("code",null,",",-1),ss=s("h3",{id:"非固定高度",tabindex:"-1"},[a("非固定高度 "),s("a",{class:"header-anchor",href:"#非固定高度","aria-hidden":"true"},"#")],-1),ns=s("hr",null,null,-1),as=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,"能分页还是分页")],-1),ls=s("blockquote",null,null,-1),ps=s("h1",{id:"基础用法",tabindex:"-1"},[a("基础用法 "),s("a",{class:"header-anchor",href:"#基础用法","aria-hidden":"true"},"#")],-1),os=s("blockquote",null,null,-1),es=B("",5),cs=JSON.parse('{"title":"虚拟列表","description":"","frontmatter":{},"headers":[{"level":2,"title":"虚拟滚动的主要原理","slug":"虚拟滚动的主要原理","link":"#虚拟滚动的主要原理","children":[{"level":3,"title":"固定高度","slug":"固定高度","link":"#固定高度","children":[]},{"level":3,"title":"非固定高度","slug":"非固定高度","link":"#非固定高度","children":[]}]}],"relativePath":"examples/virtual/index.md"}'),ts={name:"examples/virtual/index.md"},ys=Object.assign(ts,{setup(f){return(n,o)=>{const e=$("red");return m(),d("div",null,[W,s("ol",null,[X,s("li",null,[a("外侧容器的高度是"),D(e,null,{default:b(()=>[a("remain * size")]),_:1}),a(",内部容器的高度是"),D(e,null,{default:b(()=>[a("全部数据Data.length * size")]),_:1}),a(",所以可以发生滚动")]),Y,s("li",null,[a("页面渲染只要要对"),D(e,null,{default:b(()=>[a("全部数据Data.slice(start,end)")]),_:1}),a("进行切割即可")]),s("li",null,[a("当发生滚动的时候，可以计算出"),D(e,null,{default:b(()=>[a(" start = 滚动的高度 / size"),Z,a("end= start + remain")]),_:1}),a(",再次进行切割")])]),ss,s("p",null,[a("原理是相似的，都是不断的"),D(e,null,{default:b(()=>[a("切割数据")]),_:1}),a("，唯一不同的是，需要计算每个item的高度，滚动的时候动态的改变 start 的值")]),ns,as,ls,ps,os,D(Q),es])}}});export{cs as __pageData,ys as default};
